//include "IO.call"
//include "Array.upl"
//include "File.upl"

//test = "B:\Git\UPL-Compiler\Array.upl"

//arrayReader = loadFileForReading(test)

//firstLine = readStringFromFile(arrayReader)

//println(firstLine)



    //for ( x = 0; x < 10; x++ )
       //{
       //    test--
       //
       //    print(x)
        //   print(test) // would not work if namespace is used
        //   //new syntax
        //   print(this::test)
        //   // this:: moves up the namespace stack by one
        //   this::this::test // recursive
       //

    //set x 0
    //whl x < 10
    //x++ // raw copy
    //psh x
    //jmp print
    //endwhl


    x = 10
    y = @TEMP1@
    z = "Hello World"
    abc = def[ghi]
    __UPLBC("---")
    test = testFunc(foo(bar()), "This is a test")
    __UPLBC("---")
    x = test(10)
    __UPLBC("---")
    foo(bar(bar(bar())))
    __UPLBC("---")
    return 1
    __UPLBC("---")
    return test(foo(bar()))
    __UPLBC("---")
    if ( x == 10 ) ->
    {
       x = test(0)
    }
    __UPLBC("---")
    x = [0, 0, 0] : 3
    __UPLBC("---")
    while ( x == 10 ) ->
    {
        x = test(0)
    }
    __UPLBC("---")