psh 0
psh 10
jmp range
pop test 
mov @TEMP@ 0
mov @TEMP1@ 0
mov x 0
psh test
int 0x6
pop @TEMP1@
whl @TEMP@ > @TEMP1@
add @TEMP@ 1
pop @TEMP@
mov test[@TEMP@] x
psh x
jmp println
endwhl
.newline
nsp newline
dwd @TEMP0@ /n
psh @TEMP0@
int 0x1
dwd @TEMP0@ NULL
endnsp
end
.print
nsp print
pop x
psh x
int 0x1
endnsp
end
.println
nsp println
pop x
psh x
int 0x1
jmp newline
endnsp
end
.readChar
nsp readChar
int 0x3
pop @TEMP@
mov @TEMP0@ @TEMP@
psh @TEMP0@
endnsp
end
.itoa
nsp itoa
pop num
psh num
int 0x4
pop @TEMP@
mov @TEMP0@ @TEMP@
psh @TEMP0@
endnsp
end
.atoi
nsp atoi
pop a
psh a
int 0x5
pop @TEMP@
mov @TEMP0@ @TEMP@
psh @TEMP0@
endnsp
end
.readString
nsp readString
dwd tempString  
jmp readChar
pop temp 
whl temp > 10
psh temp
jmp itoa
pop tempChar 
psh tempString
psh tempChar
pop @TEMP1@
pop @TEMP0@
add @TEMP0@ @TEMP1@
pop tempString
jmp readChar
pop temp 
endwhl
mov @TEMP0@ tempString
psh @TEMP0@
endnsp
end
.range
nsp range
pop e
pop s
psh e
psh s
pop @TEMP1@
pop @TEMP0@
sub @TEMP0@ @TEMP1@
pop size
ary returnValue size
mov temp 0
whl temp < size
psh size
psh temp
pop @TEMP1@
pop @TEMP0@
add @TEMP0@ @TEMP1@
pop returnValue[temp]
add temp 1
pop temp
endwhl
mov @TEMP0@ returnValue
psh @TEMP0@
endnsp
end
